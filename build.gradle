apply plugin: 'java'
apply plugin: 'js'
apply plugin: 'tomcat'
apply from:   'sass.gradle'

apply plugin: 'eclipse'


//
// Process javascript files
//
def javascriptSource = "${projectDir}/src/main/javascript"
def javascriptDest = "${buildDir}/js"

task processJavascript(dependsOn: 'minifyJs') {
    inputs.dir '${javascriptSource}'
    outputs.dir '${javascriptDest}'
}

jshint.configure {
    source = fileTree(dir: javascriptSource, include: "**/*.js")
    dest = file("${javascriptDest}/jshint.out")
}

combineJs.configure {
    source = fileTree(dir: javascriptSource, include: "**/*.js")
    dest = file("${javascriptDest}/all.js")
}.dependsOn("jshint")

minifyJs.configure {
    source = file("${javascriptDest}/all.js")
    dest = file("${javascriptDest}/all-min.js")
}.dependsOn("combineJs")

def sassSource = "${projectDir}/src/main/scss"
def cssDest = "${project.buildDir}/css"

// Process css files
compileSass.configure {
    inputs.dir "${sassSource}"
    outputs.dir "${cssDest}"
    inputDir = project.file("${sassSource}")
    outputDir = new File("${cssDest}")
}


//
// War creation to pull in js and css (after processing)
//
war.configure {
    from (javascriptDest) {
        into 'js' include '**/*.js'
    }
    from (compileSass.outputDir) {
        into 'css' include '**/*.css'
    }
}.dependsOn("processJavascript","compileSass")


//
// JBoss Deployment tasks and configuration
//
def jbossVersion = '4.2.3.GA'
def jbossDistDir = "${buildDir}/jboss"
configurations {
	jboss
}
dependencies {
	jboss "org.jboss.jbossas:jboss-as-dist:${jbossVersion}"
}
task jbossInstall(type: Copy) {
	configurations.jboss.findAll {
		from zipTree(it) 
		into "${jbossDistDir}"
		doFirst {
			println "Expanding jboss distribution into ${jbossDistDir}"
		}
	}
}
task jbossStart (dependsOn: jbossInstall) {
	doFirst {
		def jbossRunFile = "${jbossDistDir}/jboss-${jbossVersion}/bin/run.bat"
		println "Starting ${jbossRunFile}"
		def os = System.getProperty("os.name").toLowerCase() 
		if (os.contains("windows")) {
			// start a seperate process in windows
			ant.exec(executable: 'cmd') {
				arg(value: '/c')
				arg(value: "start ${jbossRunFile}")
			}
		} else { 
			// Not windows (assume linux variant)
			println "Not supported in Linux yet"
		} 
	}
}


//
// Project dependencies
//
repositories {
    mavenLocal();
    mavenCentral();
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4+'
    def tomcatVersion = '6.0.35'
    tomcat "org.apache.tomcat:catalina:${tomcatVersion}",
            "org.apache.tomcat:coyote:${tomcatVersion}",
            "org.apache.tomcat:jasper:${tomcatVersion}"
}


//
// Gradle plugin dependencies
//
buildscript {
    repositories {
        mavenCentral()
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.1'
        classpath 'bmuschko:gradle-tomcat-plugin:0.9.4';
    }
}
